; don't run this test until we get the lit commands sorted out.
; RUN: false
; XFAIL:
; END.
; =======================================================================

; autogenerated by generate_llvm_assembler.pl. 

@printf_st = private unnamed_addr constant [37 x i8] c"this prints if poison-free: '0x%x' \0A\00"

; external declaration of the printf(~) function 
declare i32 @printf(i8* nocapture readonly, ...)

@addr_qufc = global i19 346559

define i19 @main() { ; 
  ; %convert [? x i8]* to i8* 
  %printf_st_i8 = getelementptr [37 x i8], [37 x i8]* @printf_st, i64 0, i64 0

  %1= add i19 14097, 0 
  %2= add i19 267413, 0 
  %3= sub nuw i19 0, 1 ; generates POISON 
  %4= ashr exact i19 %3, 11
  %5= lshr exact i19 %4, 7
  %6= urem i19 164108, %5
  %7= xor i19 %6, %2
  %8= sub i19 %7, %5
  %9= sdiv exact i19 500491, %8
  %10= add nsw nuw i19 471312, %9
  %11= shl nuw i19 %10, 0
  store volatile i19 %11, i19* @addr_qufc
  %12= load i19* @addr_qufc 
  %13= sdiv exact i19 %12, 234267

  call i32 (i8*, ...) @printf(i8* %printf_st_i8, i19 %13)

  ; clean up and return 
  ret i19 0 
} 

; end of program 

