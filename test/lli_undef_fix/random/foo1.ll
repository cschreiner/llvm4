; autogenerated by generate_llvm_assembler.pl. 

@printf_st = private unnamed_addr constant [37 x i8] c"this prints if poison-free: '0x%x' \0A\00"

; external declaration of the printf(~) function 
declare i32 @printf(i8* nocapture readonly, ...)

@addr_kwcl = global i7 26

define i7 @main() { ; 
  ; %convert [? x i8]* to i8* 
  %printf_st_i8 = getelementptr [37 x i8], [37 x i8]* @printf_st, i64 0, i64 0

  %1= add i7 11, 0 
  %2= add i7 25, 0 
  %3= udiv exact i7 %2, %1
  %4= sub nuw i7 %3, 125
  %5= add i7 %4, 83
  %6= ashr i7 %5, 6
  %7= srem i7 %6, 84
  store volatile i7 %7, i7* @addr_kwcl
  %8= load i7* @addr_kwcl 
  %9= sdiv exact i7 %4, %8
  %10= ashr i7 %9, 1
  %11= urem i7 %10, 116
  %12= and i7 %11, %7

  call i32 (i8*, ...) @printf(i8* %printf_st_i8, i7 %12)

  ; clean up and return 
  ret i7 0 
} 

; end of program 

